# Generated by Django 4.1.7 on 2023-04-01 18:05

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='HealthCenter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=200)),
                ('contact_number', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='MedicalRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_visit', models.DateField(auto_now_add=True)),
                ('temperature', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MaxValueValidator(60.0), django.core.validators.MinValueValidator(20.0)])),
                ('blood_pressure_systolic', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(300)])),
                ('blood_pressure_diastolic', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(200)])),
                ('pulse_rate', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(300)])),
                ('respiratory_rate', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(100)])),
                ('symptoms', models.TextField()),
                ('diagnosis', models.TextField()),
                ('prescribed_medicines', models.TextField()),
                ('notes', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medicine_name', models.CharField(max_length=255)),
                ('prescription_date', models.DateField()),
                ('instructions', models.CharField(max_length=255)),
                ('details', models.TextField()),
                ('dosage', models.CharField(max_length=50)),
                ('medical_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.medicalrecord')),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('date_of_birth', models.DateField()),
                ('address', models.CharField(max_length=255)),
                ('contact_number', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=255)),
                ('health_center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.healthcenter')),
            ],
        ),
        migrations.CreateModel(
            name='OutbreakReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(2016), django.core.validators.MaxValueValidator(2023)])),
                ('month', models.CharField(choices=[('January', 'January'), ('February', 'February'), ('March', 'March'), ('April', 'April'), ('May', 'May'), ('June', 'June'), ('July', 'July'), ('August', 'August'), ('September', 'September'), ('October', 'October'), ('November', 'November'), ('December', 'December')], max_length=9)),
                ('disease', models.CharField(choices=[('Dengue', 'Dengue'), ('Measles', 'Measles'), ('Leptospirosis', 'Leptospirosis')], max_length=20)),
                ('cases', models.IntegerField()),
                ('deaths', models.IntegerField()),
                ('health_center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.healthcenter')),
            ],
        ),
        migrations.CreateModel(
            name='MedicalSupply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('health_center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.healthcenter')),
            ],
        ),
        migrations.AddField(
            model_name='medicalrecord',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.patient'),
        ),
        migrations.CreateModel(
            name='Bill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.patient')),
            ],
        ),
        migrations.CreateModel(
            name='HealthWorker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(default='example@gmail.com', max_length=255, unique=True)),
                ('firstName', models.CharField(max_length=100, verbose_name='First Name')),
                ('middleName', models.CharField(blank=True, default='', max_length=100, verbose_name='Middle Name')),
                ('lastName', models.CharField(max_length=100, verbose_name='Last Name')),
                ('date_of_birth', models.DateField()),
                ('is_healthworker', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('health_center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.healthcenter')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('status', models.CharField(default='Pending', max_length=20)),
                ('health_center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.healthcenter')),
                ('health_worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.patient')),
            ],
            options={
                'unique_together': {('health_center', 'date')},
            },
        ),
    ]
